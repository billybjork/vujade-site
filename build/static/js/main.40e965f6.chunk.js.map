{"version":3,"sources":["assets/splashcube.gif","SplashScreen.js","ModalContext.js","Modal.js","cube-master/js/three/OrbitControls.js","cube-master/js/cube/Constants.js","cube-master/js/cube/RotationMatrices.js","cube-master/js/cube/Sticker.js","cube-master/js/cube/Cubie.js","cube-master/js/cube/Cube.js","cube-master/js/cube/main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SplashScreen","React","createElement","id","className","src","splashGif","alt","style","color","display","justifyContent","width","height","border","background","title","textAlign","role","aria-label","ModalContext","createContext","useModal","useContext","ModalProvider","_ref","children","isModalOpen","setIsModalOpen","useState","currentVideoID","setCurrentVideoID","openModal","useCallback","videoID","console","log","concat","closeModal","providerValue","useMemo","Provider","value","Modal","navigate","useNavigate","location","useLocation","videoInfo","setVideoInfo","isLoading","setIsLoading","modalRef","useRef","getEmbeddedVideoUrl","url","vimeoId","split","useEffect","videoIDFromURL","pathname","axios","get","then","response","data","catch","error","handleCloseModal","embeddedVideoUrl","URL","onClick","ref","e","stopPropagation","Fragment","videoName","allow","allowFullScreen","dangerouslySetInnerHTML","__html","Description","OrbitControls","object","domElement","undefined","warn","document","this","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","onKeyDown","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","subVectors","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","preventDefault","focus","window","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","addEventListener","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","keyCode","onMouseMove","onMouseUp","handleMouseWheel","needsUpdate","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","prototype","Object","create","EventDispatcher","constructor","MapControls","call","Axes","freeze","POSITIVE","X","Y","Z","NEGATIVE","AxisVectors","THREE","MoveFlags","SOLUTION_START","SOLUTION_END","ClickFlags","ROTATION","CUBIE","KeysToMoves","u","d","f","b","r","l","m","s","z","U","D","F","B","R","L","M","E","S","wu","wd","wf","wb","wr","wl","wU","wD","wF","wB","wR","wL","rotationMatrices","cos","sin","axisEnum","getRotationMatrix","axis","shape","size","moveTo","pos","lineTo","quadraticCurveTo","roundedSquareGeometry","center","Sticker","facingVector","videoURL","positionVector","fixedPositionVector","fixedFacingVector","video","crossOrigin","load","muted","loop","play","texture","minFilter","magFilter","format","material","map","side","mesh","updatePosition","rotation","abs","axes","values","forEach","rest","filter","elt","lockPosition","round","turn","dir","rotationMatrix","applyMatrix3","rotate","rotateOnWorldAxis","eps","absarc","roundedBoxGeometry","depth","bevelEnabled","bevelSegments","smoothness","steps","bevelSize","radius0","bevelThickness","curveSegments","materialBlack","Cubie","cubieVideoURLs","animating","animateAxis","animateDir","stickers","videoIndex","push","vector","sticker","Cube","scene","videoURLs","cubies","meshes","stickersMap","Map","slice","cubie","uuid","fn","repr","getColor","cubeRepr","line","join","move","moveStr","moveLayer","axisValue","animDir","CubeMasterInit","holdingW","mouse","delta","raycaster","getHeight","innerHeight","moveBuffer","solving","getElementById","camera","innerWidth","renderer","antialias","setPixelRatio","devicePixelRatio","setSize","appendChild","controls","cube","rotationPixelCutoff","updateRotationPixelCutoff","halfWidth","project","clock","getDelta","shift","animate","requestAnimationFrame","render","key","onWindowResize","aspect","offsetX","offsetY","onDocumentMouseDown","onDocumentMouseUp","onDocumentMouseMove","chosenAxis","chosenDir","selectedObject","dragging","tagName","toLowerCase","setFromCamera","intersects","intersectObjects","has","selectedSticker","BASE_URL","Video","memo","onVideoClick","videoRef","inView","useInView","triggerOnce","rootMargin","handleMouseEnter","isMobile","current","handleMouseLeave","pause","playsInline","onMouseEnter","onMouseLeave","prevProps","nextProps","shuffleArray","array","i","j","floor","random","MemoizedMainContent","_ref2","scenes","uniqueVideoIDs","useParams","shuffledScenes","setShuffledScenes","some","handleVideoNameClick","onWelcomePage","navigateAndOpenModal","scrollTo","documentElement","behavior","setTimeout","index","sceneURL","Home","_ref3","initialLoad","showSplash","setShowSplash","scrollPositionBeforeNavigation","handleScroll","scrollThreshold","hasScrolledPastSplash","scrollY","replace","splashScreenStyle","CubeWithVideos","cubeVideos","setCubeVideos","async","fetchCubeVideos","AppWrapper","setScenes","setUniqueVideoIDs","scenesResponse","videosResponse","_","uniqBy","fetchContent","memoizedScenes","memoizedUniqueVideoIDs","Router","Suspense","fallback","Routes","Route","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","StrictMode","App"],"mappings":"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","file":"static/js/main.40e965f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splashcube.9243f971.gif\";","import React from 'react';\nimport splashGif from './assets/splashcube.gif';\n\nfunction SplashScreen() {\n  return (\n    <div id=\"splash-section\" className=\"splash-screen\">\n      <div className=\"splash-screen\">\n        <div className=\"splash-content\">\n          <img src={splashGif} alt=\"Splash GIF\" className=\"splash-image\" />\n          <div className=\"splash-text\">\n            <p>\n              The Rubik’s Cube has 43,000,000,000,000,000,000 possible combinations... and <i>one</i> solution.\n            </p>\n            <p>\n              It's easy to appreciate the puzzle in its solved form: a universe of possibility reduced to six harmonic faces. But <i>leaving</i> it solved would squander all that potential.\n            </p>\n            <p>\n              <b>VU JA DE</b> exists to scramble “solved” arrangements of cultural ephemera. To flip the switch from <i style={{ color: 'blue' }}>solving</i> to <i style={{ color: 'blue' }}>playing.</i> From <i style={{ color: 'blue' }}>I've been here before</i> to <i style={{ color: 'blue' }}>I've never seen this before.</i> From <i style={{ color: 'blue' }}>déjà vu</i> to <i style={{ color: 'blue' }}>vujà de.</i>\n            </p>\n            <p>\n              Like the 43 quintillion permutations of the Rubik's Cube, these stories are starting points, not resolutions. They're not made for an algorithmic feed or a distracted scroll, which is why they come to your email. Explore on your own time, at your own pace, with nobody trying to sell you something in the process.\n            </p>\n            <div className=\"splash-embed\" style={{ display: 'flex', justifyContent: 'center' }}>\n            <iframe\n              src=\"https://vujadeworld.substack.com/embed\"\n              width=\"480\"\n              height=\"150\"\n              style={{ border: '0px solid #EEE', background: 'white' }}\n              title=\"VUJADE Substack\"\n            ></iframe>\n          </div>\n            <p style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"Rolling Eyes Emoji\">🙄</span><b> Keep scrolling to enter </b><span role=\"img\" aria-label=\"Pointing Down Emoji\">👇</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SplashScreen;\n","import React, { createContext, useContext, useState, useMemo, useCallback } from 'react';\n\nconst ModalContext = createContext();\n\nexport const useModal = () => useContext(ModalContext);\n\nexport const ModalProvider = ({ children }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentVideoID, setCurrentVideoID] = useState(null);\n\n  // OpenModal function updated to simply set the modal state and current video ID.\n  // This handles opening the modal both programmatically and via URL navigation.\n  const openModal = useCallback((videoID) => {\n    console.log(`Opening modal for videoID: ${videoID}`);\n    setIsModalOpen(true);\n    setCurrentVideoID(videoID);\n  }, []);\n\n  // CloseModal function simplified to remove the previously included navigateCallback parameter.\n  // The function now purely focuses on closing the modal and resetting relevant state.\n  // This change is based on the finding that navigateCallback was unnecessary and could potentially cause routing issues.\n  const closeModal = useCallback(() => {\n    console.log('Closing modal');\n    setIsModalOpen(false);\n    setCurrentVideoID(null);\n  }, []);\n\n  // The context value is memoized to ensure that consumers of the context do not re-render unnecessarily.\n  // This is particularly important for performance, as it prevents unnecessary re-renders of components that use this context.\n  const providerValue = useMemo(() => ({\n    isModalOpen,\n    currentVideoID,\n    openModal,\n    closeModal\n  }), [isModalOpen, currentVideoID, openModal, closeModal]);\n\n  return (\n    <ModalContext.Provider value={providerValue}>\n      {children}\n    </ModalContext.Provider>\n  );\n};","import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useModal } from './ModalContext';\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n  ? 'https://vujade-site-bd6c94750c62.herokuapp.com'\n  : 'http://127.0.0.1:5000';\n\n  function Modal() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { isModalOpen, currentVideoID, closeModal } = useModal();\n    const [videoInfo, setVideoInfo] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const modalRef = useRef(null);\n\n  // Function to transform video URLs for embedding\n  const getEmbeddedVideoUrl = useCallback((url) => {\n    const parts = url.split(\"vimeo.com/\")[1];\n    const vimeoId = parts.split('/')[0];\n    return `https://player.vimeo.com/video/${vimeoId}`;\n  }, []);\n\n   // Fetch and set video info based on URL change or currentVideoID update\n   useEffect(() => {\n    const videoIDFromURL = location.pathname.split('/')[1];\n    if (videoIDFromURL && (videoIDFromURL !== currentVideoID || !videoInfo)) {\n      setIsLoading(true); // Indicate loading\n      axios.get(`${BASE_URL}/api/video_info/${videoIDFromURL}`)\n        .then(response => {\n          setVideoInfo(response.data);\n          setIsLoading(false); // Reset loading state\n        })\n        .catch(error => {\n          console.error('Error fetching video info: ', error);\n          setIsLoading(false); // Ensure loading state is reset even on error\n        });\n    }\n  }, [location.pathname, currentVideoID, videoInfo]);\n\n  const handleCloseModal = useCallback(() => {\n    closeModal();\n    navigate('/'); // Use navigate to change URL back to root\n  }, [closeModal, navigate]);\n\n  // Memoize embedded video URL\n  const embeddedVideoUrl = useMemo(() => videoInfo ? getEmbeddedVideoUrl(videoInfo.URL) : null, [videoInfo, getEmbeddedVideoUrl]);\n\n  if (isLoading || !videoInfo) { // Show loading indicator or prevent rendering if videoInfo is not available yet\n    return <div>Loading...</div>;\n  }\n  \n  return (\n    <div className={`modal-backdrop ${isModalOpen ? 'open' : ''}`} onClick={handleCloseModal} ref={modalRef}>\n      <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-content\">\n          <span className=\"close\" onClick={handleCloseModal}>&times;</span>\n          <>\n            <h2>{videoInfo ? videoInfo.videoName : 'Loading...'}</h2>\n            <div className=\"embed-container\">\n              {videoInfo && (\n                <iframe\n                  src={embeddedVideoUrl}\n                  allow=\"autoplay; fullscreen\"\n                  allowFullScreen\n                  title={videoInfo ? videoInfo.videoName : ''}\n                ></iframe>\n              )}\n            </div>\n            {videoInfo && <div dangerouslySetInnerHTML={{ __html: videoInfo.Description }}></div>}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","import {\n    EventDispatcher,\n    MOUSE,\n    Quaternion,\n    Spherical,\n    TOUCH,\n    Vector2,\n    Vector3,\n} from \"three\";\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = function (object, domElement) {\n    if (domElement === undefined)\n        console.warn(\n            'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.'\n        );\n    if (domElement === document)\n        console.error(\n            'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n\n    this.object = object;\n    this.domElement = domElement;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.05;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n    // Mouse buttons\n    this.mouseButtons = {\n        LEFT: MOUSE.ROTATE,\n        MIDDLE: MOUSE.DOLLY,\n        RIGHT: MOUSE.PAN,\n    };\n\n    // Touch fingers\n    this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n        return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function () {\n        return spherical.theta;\n    };\n\n    this.saveState = function () {\n        scope.target0.copy(scope.target);\n        scope.position0.copy(scope.object.position);\n        scope.zoom0 = scope.object.zoom;\n    };\n\n    this.reset = function () {\n        scope.target.copy(scope.target0);\n        scope.object.position.copy(scope.position0);\n        scope.object.zoom = scope.zoom0;\n\n        scope.object.updateProjectionMatrix();\n        scope.dispatchEvent(changeEvent);\n\n        scope.update();\n\n        state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function () {\n        var offset = new Vector3();\n\n        // so camera.up is the orbit axis\n        var quat = new Quaternion().setFromUnitVectors(\n            object.up,\n            new Vector3(0, 1, 0)\n        );\n        var quatInverse = quat.clone().invert();\n\n        var lastPosition = new Vector3();\n        var lastQuaternion = new Quaternion();\n\n        var twoPI = 2 * Math.PI;\n\n        return function update() {\n            var position = scope.object.position;\n\n            offset.copy(position).sub(scope.target);\n\n            // rotate offset to \"y-axis-is-up\" space\n            offset.applyQuaternion(quat);\n\n            // angle from z-axis around y-axis\n            spherical.setFromVector3(offset);\n\n            if (scope.autoRotate && state === STATE.NONE) {\n                rotateLeft(getAutoRotationAngle());\n            }\n\n            if (scope.enableDamping) {\n                spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n                spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n            } else {\n                spherical.theta += sphericalDelta.theta;\n                spherical.phi += sphericalDelta.phi;\n            }\n\n            // restrict theta to be between desired limits\n\n            var min = scope.minAzimuthAngle;\n            var max = scope.maxAzimuthAngle;\n\n            if (isFinite(min) && isFinite(max)) {\n                if (min < -Math.PI) min += twoPI;\n                else if (min > Math.PI) min -= twoPI;\n\n                if (max < -Math.PI) max += twoPI;\n                else if (max > Math.PI) max -= twoPI;\n\n                if (min <= max) {\n                    spherical.theta = Math.max(\n                        min,\n                        Math.min(max, spherical.theta)\n                    );\n                } else {\n                    spherical.theta =\n                        spherical.theta > (min + max) / 2\n                            ? Math.max(min, spherical.theta)\n                            : Math.min(max, spherical.theta);\n                }\n            }\n\n            // restrict phi to be between desired limits\n            spherical.phi = Math.max(\n                scope.minPolarAngle,\n                Math.min(scope.maxPolarAngle, spherical.phi)\n            );\n\n            spherical.makeSafe();\n\n            spherical.radius *= scale;\n\n            // restrict radius to be between desired limits\n            spherical.radius = Math.max(\n                scope.minDistance,\n                Math.min(scope.maxDistance, spherical.radius)\n            );\n\n            // move target to panned location\n\n            if (scope.enableDamping === true) {\n                scope.target.addScaledVector(panOffset, scope.dampingFactor);\n            } else {\n                scope.target.add(panOffset);\n            }\n\n            offset.setFromSpherical(spherical);\n\n            // rotate offset back to \"camera-up-vector-is-up\" space\n            offset.applyQuaternion(quatInverse);\n\n            position.copy(scope.target).add(offset);\n\n            scope.object.lookAt(scope.target);\n\n            if (scope.enableDamping === true) {\n                sphericalDelta.theta *= 1 - scope.dampingFactor;\n                sphericalDelta.phi *= 1 - scope.dampingFactor;\n\n                panOffset.multiplyScalar(1 - scope.dampingFactor);\n            } else {\n                sphericalDelta.set(0, 0, 0);\n\n                panOffset.set(0, 0, 0);\n            }\n\n            scale = 1;\n\n            // update condition is:\n            // min(camera displacement, camera rotation in radians)^2 > EPS\n            // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n            if (\n                zoomChanged ||\n                lastPosition.distanceToSquared(scope.object.position) > EPS ||\n                8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n            ) {\n                scope.dispatchEvent(changeEvent);\n\n                lastPosition.copy(scope.object.position);\n                lastQuaternion.copy(scope.object.quaternion);\n                zoomChanged = false;\n\n                return true;\n            }\n\n            return false;\n        };\n    })();\n\n    this.dispose = function () {\n        scope.domElement.removeEventListener(\n            \"contextmenu\",\n            onContextMenu,\n            false\n        );\n\n        scope.domElement.removeEventListener(\n            \"pointerdown\",\n            onPointerDown,\n            false\n        );\n        scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n        scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n        scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n        scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n        scope.domElement.ownerDocument.removeEventListener(\n            \"pointermove\",\n            onPointerMove,\n            false\n        );\n        scope.domElement.ownerDocument.removeEventListener(\n            \"pointerup\",\n            onPointerUp,\n            false\n        );\n\n        scope.domElement.removeEventListener(\"keydown\", onKeyDown, false);\n\n        //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n\n    var changeEvent = { type: \"change\" };\n    var startEvent = { type: \"start\" };\n    var endEvent = { type: \"end\" };\n\n    var STATE = {\n        NONE: -1,\n        ROTATE: 0,\n        DOLLY: 1,\n        PAN: 2,\n        TOUCH_ROTATE: 3,\n        TOUCH_PAN: 4,\n        TOUCH_DOLLY_PAN: 5,\n        TOUCH_DOLLY_ROTATE: 6,\n    };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n        return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n        return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n        sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n        sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = (function () {\n        var v = new Vector3();\n\n        return function panLeft(distance, objectMatrix) {\n            v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n            v.multiplyScalar(-distance);\n\n            panOffset.add(v);\n        };\n    })();\n\n    var panUp = (function () {\n        var v = new Vector3();\n\n        return function panUp(distance, objectMatrix) {\n            if (scope.screenSpacePanning === true) {\n                v.setFromMatrixColumn(objectMatrix, 1);\n            } else {\n                v.setFromMatrixColumn(objectMatrix, 0);\n                v.crossVectors(scope.object.up, v);\n            }\n\n            v.multiplyScalar(distance);\n\n            panOffset.add(v);\n        };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = (function () {\n        var offset = new Vector3();\n\n        return function pan(deltaX, deltaY) {\n            var element = scope.domElement;\n\n            if (scope.object.isPerspectiveCamera) {\n                // perspective\n                var position = scope.object.position;\n                offset.copy(position).sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan(\n                    ((scope.object.fov / 2) * Math.PI) / 180.0\n                );\n\n                // we use only clientHeight here so aspect ratio does not distort speed\n                panLeft(\n                    (2 * deltaX * targetDistance) / element.clientHeight,\n                    scope.object.matrix\n                );\n                panUp(\n                    (2 * deltaY * targetDistance) / element.clientHeight,\n                    scope.object.matrix\n                );\n            } else if (scope.object.isOrthographicCamera) {\n                // orthographic\n                panLeft(\n                    (deltaX * (scope.object.right - scope.object.left)) /\n                        scope.object.zoom /\n                        element.clientWidth,\n                    scope.object.matrix\n                );\n                panUp(\n                    (deltaY * (scope.object.top - scope.object.bottom)) /\n                        scope.object.zoom /\n                        element.clientHeight,\n                    scope.object.matrix\n                );\n            } else {\n                // camera neither orthographic nor perspective\n                console.warn(\n                    \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n                );\n                scope.enablePan = false;\n            }\n        };\n    })();\n\n    function dollyOut(dollyScale) {\n        if (scope.object.isPerspectiveCamera) {\n            scale /= dollyScale;\n        } else if (scope.object.isOrthographicCamera) {\n            scope.object.zoom = Math.max(\n                scope.minZoom,\n                Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n            );\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n        } else {\n            console.warn(\n                \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n            );\n            scope.enableZoom = false;\n        }\n    }\n\n    function dollyIn(dollyScale) {\n        if (scope.object.isPerspectiveCamera) {\n            scale *= dollyScale;\n        } else if (scope.object.isOrthographicCamera) {\n            scope.object.zoom = Math.max(\n                scope.minZoom,\n                Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n            );\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n        } else {\n            console.warn(\n                \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n            );\n            scope.enableZoom = false;\n        }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n        rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n        dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n        panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n        rotateEnd.set(event.clientX, event.clientY);\n\n        rotateDelta\n            .subVectors(rotateEnd, rotateStart)\n            .multiplyScalar(scope.rotateSpeed);\n\n        var element = scope.domElement;\n\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n        rotateStart.copy(rotateEnd);\n\n        scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n        dollyEnd.set(event.clientX, event.clientY);\n\n        dollyDelta.subVectors(dollyEnd, dollyStart);\n\n        if (dollyDelta.y > 0) {\n            dollyOut(getZoomScale());\n        } else if (dollyDelta.y < 0) {\n            dollyIn(getZoomScale());\n        }\n\n        dollyStart.copy(dollyEnd);\n\n        scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n        panEnd.set(event.clientX, event.clientY);\n\n        panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n        pan(panDelta.x, panDelta.y);\n\n        panStart.copy(panEnd);\n\n        scope.update();\n    }\n\n    function handleMouseUp(/*event*/) {\n        // no-op\n    }\n\n    function handleMouseWheel(event) {\n        if (event.deltaY < 0) {\n            dollyIn(getZoomScale());\n        } else if (event.deltaY > 0) {\n            dollyOut(getZoomScale());\n        }\n\n        scope.update();\n    }\n\n    function handleKeyDown(event) {\n        var needsUpdate = false;\n\n        switch (event.keyCode) {\n            case scope.keys.UP:\n                pan(0, scope.keyPanSpeed);\n                needsUpdate = true;\n                break;\n\n            case scope.keys.BOTTOM:\n                pan(0, -scope.keyPanSpeed);\n                needsUpdate = true;\n                break;\n\n            case scope.keys.LEFT:\n                pan(scope.keyPanSpeed, 0);\n                needsUpdate = true;\n                break;\n\n            case scope.keys.RIGHT:\n                pan(-scope.keyPanSpeed, 0);\n                needsUpdate = true;\n                break;\n            default:\n                console.log(`Unhandled key: ${event.keyCode}`);\n                break;\n        }\n\n        if (needsUpdate) {\n            // prevent the browser from scrolling on cursor keys\n            event.preventDefault();\n\n            scope.update();\n        }\n    }\n\n    function handleTouchStartRotate(event) {\n        if (event.touches.length === 1) {\n            rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n        } else {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n            rotateStart.set(x, y);\n        }\n    }\n\n    function handleTouchStartPan(event) {\n        if (event.touches.length === 1) {\n            panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n        } else {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchStartDolly(event) {\n        var dx = event.touches[0].pageX - event.touches[1].pageX;\n        var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n        var distance = Math.sqrt(dx * dx + dy * dy);\n\n        dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n        if (scope.enableZoom) handleTouchStartDolly(event);\n\n        if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n        if (scope.enableZoom) handleTouchStartDolly(event);\n\n        if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n        if (event.touches.length === 1) {\n            rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n        } else {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n            rotateEnd.set(x, y);\n        }\n\n        rotateDelta\n            .subVectors(rotateEnd, rotateStart)\n            .multiplyScalar(scope.rotateSpeed);\n\n        var element = scope.domElement;\n\n        rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n        rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n        rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n        if (event.touches.length === 1) {\n            panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n        } else {\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n            panEnd.set(x, y);\n        }\n\n        panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n        pan(panDelta.x, panDelta.y);\n\n        panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n        var dx = event.touches[0].pageX - event.touches[1].pageX;\n        var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n        var distance = Math.sqrt(dx * dx + dy * dy);\n\n        dollyEnd.set(0, distance);\n\n        dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n        dollyOut(dollyDelta.y);\n\n        dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n        if (scope.enableZoom) handleTouchMoveDolly(event);\n\n        if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n        if (scope.enableZoom) handleTouchMoveDolly(event);\n\n        if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function handleTouchEnd(/*event*/) {\n        // no-op\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n        if (scope.enabled === false) return;\n\n        switch (event.pointerType) {\n            case \"mouse\":\n            case \"pen\":\n                onMouseDown(event);\n                break;\n            default:\n                console.log(`Unhandled key: ${event}`);\n                break;\n        }\n    }\n\n    function onPointerMove(event) {\n        if (scope.enabled === false) return;\n\n        switch (event.pointerType) {\n            case \"mouse\":\n            case \"pen\":\n                onMouseMove(event);\n                break;\n            default:\n                console.log(`Unhandled key: ${event}`);\n                break;\n        }\n    }\n\n    function onPointerUp(event) {\n        switch (event.pointerType) {\n            case \"mouse\":\n            case \"pen\":\n                onMouseUp(event);\n                break;\n            default:\n                console.log(`Unhandled key: ${event}`);\n                break;\n        }\n    }\n\n    function onMouseDown(event) {\n        // Prevent the browser from scrolling.\n        event.preventDefault();\n\n        // Manually set the focus since calling preventDefault above\n        // prevents the browser from setting it automatically.\n\n        scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n        var mouseAction;\n\n        switch (event.button) {\n            case 0:\n                mouseAction = scope.mouseButtons.LEFT;\n                break;\n\n            case 1:\n                mouseAction = scope.mouseButtons.MIDDLE;\n                break;\n\n            case 2:\n                mouseAction = scope.mouseButtons.RIGHT;\n                break;\n\n            default:\n                mouseAction = -1;\n        }\n\n        switch (mouseAction) {\n            case MOUSE.DOLLY:\n                if (scope.enableZoom === false) return;\n\n                handleMouseDownDolly(event);\n\n                state = STATE.DOLLY;\n\n                break;\n\n            case MOUSE.ROTATE:\n                if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                    if (scope.enablePan === false) return;\n\n                    handleMouseDownPan(event);\n\n                    state = STATE.PAN;\n                } else {\n                    if (scope.enableRotate === false) return;\n\n                    handleMouseDownRotate(event);\n\n                    state = STATE.ROTATE;\n                }\n\n                break;\n\n            case MOUSE.PAN:\n                if (event.ctrlKey || event.metaKey || event.shiftKey) {\n                    if (scope.enableRotate === false) return;\n\n                    handleMouseDownRotate(event);\n\n                    state = STATE.ROTATE;\n                } else {\n                    if (scope.enablePan === false) return;\n\n                    handleMouseDownPan(event);\n\n                    state = STATE.PAN;\n                }\n\n                break;\n\n            default:\n                state = STATE.NONE;\n        }\n\n        if (state !== STATE.NONE) {\n            scope.domElement.ownerDocument.addEventListener(\n                \"pointermove\",\n                onPointerMove,\n                false\n            );\n            scope.domElement.ownerDocument.addEventListener(\n                \"pointerup\",\n                onPointerUp,\n                false\n            );\n\n            scope.dispatchEvent(startEvent);\n        }\n    }\n\n    function onMouseMove(event) {\n        if (scope.enabled === false) return;\n\n        event.preventDefault();\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (scope.enableRotate === false) return;\n                handleMouseMoveRotate(event);\n                break;\n            case STATE.DOLLY:\n                if (scope.enableZoom === false) return;\n                handleMouseMoveDolly(event);\n                break;\n            case STATE.PAN:\n                if (scope.enablePan === false) return;\n                handleMouseMovePan(event);\n                break;\n            default:\n                console.log(`Unhandled key: ${event.keyCode}`);\n                break;\n        }\n    }\n\n    function onMouseUp(event) {\n        scope.domElement.ownerDocument.removeEventListener(\n            \"pointermove\",\n            onPointerMove,\n            false\n        );\n        scope.domElement.ownerDocument.removeEventListener(\n            \"pointerup\",\n            onPointerUp,\n            false\n        );\n\n        if (scope.enabled === false) return;\n\n        handleMouseUp(event);\n\n        scope.dispatchEvent(endEvent);\n\n        state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n        if (\n            scope.enabled === false ||\n            scope.enableZoom === false ||\n            (state !== STATE.NONE && state !== STATE.ROTATE)\n        )\n            return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        scope.dispatchEvent(startEvent);\n\n        handleMouseWheel(event);\n\n        scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n        if (\n            scope.enabled === false ||\n            scope.enableKeys === false ||\n            scope.enablePan === false\n        )\n            return;\n\n        handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n        if (scope.enabled === false) return;\n\n        event.preventDefault(); // prevent scrolling\n\n        switch (event.touches.length) {\n            case 1:\n                switch (scope.touches.ONE) {\n                    case TOUCH.ROTATE:\n                        if (scope.enableRotate === false) return;\n\n                        handleTouchStartRotate(event);\n\n                        state = STATE.TOUCH_ROTATE;\n\n                        break;\n\n                    case TOUCH.PAN:\n                        if (scope.enablePan === false) return;\n\n                        handleTouchStartPan(event);\n\n                        state = STATE.TOUCH_PAN;\n\n                        break;\n\n                    default:\n                        state = STATE.NONE;\n                }\n\n                break;\n\n            case 2:\n                switch (scope.touches.TWO) {\n                    case TOUCH.DOLLY_PAN:\n                        if (\n                            scope.enableZoom === false &&\n                            scope.enablePan === false\n                        )\n                            return;\n\n                        handleTouchStartDollyPan(event);\n\n                        state = STATE.TOUCH_DOLLY_PAN;\n\n                        break;\n\n                    case TOUCH.DOLLY_ROTATE:\n                        if (\n                            scope.enableZoom === false &&\n                            scope.enableRotate === false\n                        )\n                            return;\n\n                        handleTouchStartDollyRotate(event);\n\n                        state = STATE.TOUCH_DOLLY_ROTATE;\n\n                        break;\n\n                    default:\n                        state = STATE.NONE;\n                }\n\n                break;\n\n            default:\n                state = STATE.NONE;\n        }\n\n        if (state !== STATE.NONE) {\n            scope.dispatchEvent(startEvent);\n        }\n    }\n\n    function onTouchMove(event) {\n        if (scope.enabled === false) return;\n\n        event.preventDefault(); // prevent scrolling\n        event.stopPropagation();\n\n        switch (state) {\n            case STATE.TOUCH_ROTATE:\n                if (scope.enableRotate === false) return;\n\n                handleTouchMoveRotate(event);\n\n                scope.update();\n\n                break;\n\n            case STATE.TOUCH_PAN:\n                if (scope.enablePan === false) return;\n\n                handleTouchMovePan(event);\n\n                scope.update();\n\n                break;\n\n            case STATE.TOUCH_DOLLY_PAN:\n                if (scope.enableZoom === false && scope.enablePan === false)\n                    return;\n\n                handleTouchMoveDollyPan(event);\n\n                scope.update();\n\n                break;\n\n            case STATE.TOUCH_DOLLY_ROTATE:\n                if (scope.enableZoom === false && scope.enableRotate === false)\n                    return;\n\n                handleTouchMoveDollyRotate(event);\n\n                scope.update();\n\n                break;\n\n            default:\n                state = STATE.NONE;\n        }\n    }\n\n    function onTouchEnd(event) {\n        if (scope.enabled === false) return;\n\n        handleTouchEnd(event);\n\n        scope.dispatchEvent(endEvent);\n\n        state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n        if (scope.enabled === false) return;\n\n        event.preventDefault();\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n    scope.domElement.addEventListener(\"pointerdown\", onPointerDown, false);\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n    scope.domElement.addEventListener(\"keydown\", onKeyDown, false);\n\n    // force an update at start\n\n    this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nvar MapControls = function (object, domElement) {\n    OrbitControls.call(this, object, domElement);\n\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n};\n\nMapControls.prototype = Object.create(EventDispatcher.prototype);\nMapControls.prototype.constructor = MapControls;\n\nexport { OrbitControls, MapControls };\n","import * as THREE from 'three';\n\n/**\n * Enum for the axes in three dimensional space,\n * both positive and negative.\n *\n * Positive values correspond to the keys for\n * THREE.Vector3 vectors.\n */\nexport const Axes = Object.freeze({\n    POSITIVE: {\n        X: \"x\",\n        Y: \"y\",\n        Z: \"z\",\n    },\n    NEGATIVE: {\n        X: \"-x\",\n        Y: \"-y\",\n        Z: \"-z\",\n    },\n});\n\n/**\n * Normalized axis vectors corresponding to the three axes in either direction.\n */\nexport const AxisVectors = Object.freeze({\n    [Axes.POSITIVE.X]: new THREE.Vector3(1, 0, 0),\n    [Axes.POSITIVE.Y]: new THREE.Vector3(0, 1, 0),\n    [Axes.POSITIVE.Z]: new THREE.Vector3(0, 0, 1),\n    [Axes.NEGATIVE.X]: new THREE.Vector3(-1, 0, 0),\n    [Axes.NEGATIVE.Y]: new THREE.Vector3(0, -1, 0),\n    [Axes.NEGATIVE.Z]: new THREE.Vector3(0, 0, -1),\n});\n\n/**\n * Constant controlling speed of animations.\n */\nexport const ANIMATION_SPEED = 12.5;\n\n/**\n * Constants in the move buffer to signal the start and end of a solution\n */\nexport const MoveFlags = Object.freeze({\n    SOLUTION_START: \"start\",\n    SOLUTION_END: \"end\",\n});\n\n/**\n * Constants for click events to control what happens during mouse actions\n */\nexport const ClickFlags = Object.freeze({\n    NONE: \"none\",\n    ROTATION: \"rotation\",\n    CUBIE: \"cubie\",\n});\n\n/**\n * Map from key presses to the moves they correspond to.\n */\nexport const KeysToMoves = Object.freeze({\n    u: \"U\",\n    d: \"D\",\n    f: \"F\",\n    b: \"B\",\n    r: \"R\",\n    l: \"L\",\n    m: \"M\",\n    e: \"E\",\n    s: \"S\",\n    x: \"X\",\n    y: \"Y\",\n    z: \"Z\",\n    U: \"U'\",\n    D: \"D'\",\n    F: \"F'\",\n    B: \"B'\",\n    R: \"R'\",\n    L: \"L'\",\n    M: \"M'\",\n    E: \"E'\",\n    S: \"S'\",\n    X: \"X'\",\n    Y: \"Y'\",\n    Z: \"Z'\",\n    wu: \"u\",\n    wd: \"d\",\n    wf: \"f\",\n    wb: \"b\",\n    wr: \"r\",\n    wl: \"l\",\n    wU: \"u'\",\n    wD: \"d'\",\n    wF: \"f'\",\n    wB: \"b'\",\n    wR: \"r'\",\n    wL: \"l'\",\n});\n","import * as THREE from 'three';\n\nimport { Axes } from \"./Constants.js\";\n\n/**\n * Rotation matrices to rotate the THREE.Vector3 about an axis by\n * a given angle.\n *\n * See: https://en.wikipedia.org/wiki/Rotation_matrix#In_three_dimensions\n * for more info on rotation matrices.\n */\n\n/**\n * Get a rotation matrix to rotate on the X-axis\n * by theta radians.\n */\nfunction getXRotationMatrix(theta) {\n    const m = new THREE.Matrix3();\n    m.set(\n        1,\n        0,\n        0,\n        0,\n        Math.cos(theta),\n        -Math.sin(theta),\n        0,\n        Math.sin(theta),\n        Math.cos(theta)\n    );\n    return m;\n}\n\n/**\n * Get a rotation matrix to rotate on the Y-axis\n * by theta radians.\n */\nfunction getYRotationMatrix(theta) {\n    const m = new THREE.Matrix3();\n    m.set(\n        Math.cos(theta),\n        0,\n        Math.sin(theta),\n        0,\n        1,\n        0,\n        -Math.sin(theta),\n        0,\n        Math.cos(theta)\n    );\n    return m;\n}\n\n/**\n * Get a rotation matrix to rotate on the Z-axis\n * by theta radians.\n */\nfunction getZRotationMatrix(theta) {\n    const m = new THREE.Matrix3();\n    m.set(\n        Math.cos(theta),\n        -Math.sin(theta),\n        0,\n        Math.sin(theta),\n        Math.cos(theta),\n        0,\n        0,\n        0,\n        1\n    );\n    return m;\n}\n\n/**\n * Array of rotation matrices, one per axis.\n */\nconst rotationMatrices = [\n    getXRotationMatrix,\n    getYRotationMatrix,\n    getZRotationMatrix,\n];\n\n/**\n * Map from axis to index into rotationMatrices array.\n */\nconst axisEnum = Object.freeze({\n    [Axes.POSITIVE.X]: 0,\n    [Axes.POSITIVE.Y]: 1,\n    [Axes.POSITIVE.Z]: 2,\n});\n\n/**\n * Get a rotation matrix for the given axis (\"x\", \"y\", or \"z\")\n * for the given number of radians.\n */\nexport default function getRotationMatrix(axis, theta) {\n    return rotationMatrices[axisEnum[axis]](theta);\n}\n","import * as THREE from 'three';\n\nimport getRotationMatrix from \"./RotationMatrices.js\";\nimport { Axes, AxisVectors } from \"./Constants.js\";\n\n/**\n * Rounded Rectangle code taken from three.js examples: https://threejs.org/examples/#webgl_geometry_shapes\n */\n// create a new shape and manually construct a rounded square\nconst shape = new THREE.Shape();\nconst pos = 0; // the initial x and y coordinate of the square\nconst size = 0.925; // side length of the rounded square\nconst radius = 0.1; // radius of the curves in the corners of the square\n// draw left side\nshape.moveTo(pos, pos + radius);\nshape.lineTo(pos, pos + size - radius);\n// curve and draw top side\nshape.quadraticCurveTo(pos, pos + size, pos + radius, pos + size);\nshape.lineTo(pos + size - radius, pos + size);\n// curve and draw right side\nshape.quadraticCurveTo(pos + size, pos + size, pos + size, pos + size - radius);\nshape.lineTo(pos + size, pos + radius);\n// curve and draw bottom side\nshape.quadraticCurveTo(pos + size, pos, pos + size - radius, pos);\nshape.lineTo(pos + radius, pos);\n// draw final curve connecting to left side\nshape.quadraticCurveTo(pos, pos, pos, pos + radius);\n\n// create a geometry from the rounded square shape\nconst roundedSquareGeometry = new THREE.ShapeBufferGeometry(shape);\nroundedSquareGeometry.center();\n\n/**\n * Class for an individual sticker on the cube.\n */\nclass Sticker {\n    /**\n     * Construct a new sticker at the given position facing the given\n     * direction with the specified video URL.\n     * @param {number} x X position of sticker\n     * @param {number} y Y position of sticker\n     * @param {number} z Z position of sticker\n     * @param {*} facingVector Direction sticker is facing\n     * @param {string} videoURL Video URL for the sticker\n     */\n    constructor(x, y, z, facingVector, videoURL) {\n        this.positionVector = new THREE.Vector3(x, y, z);\n        this.fixedPositionVector = new THREE.Vector3(x, y, z);\n        this.facingVector = facingVector;\n        this.fixedFacingVector = new THREE.Vector3(facingVector.x, facingVector.y, facingVector.z);\n\n        // Setup video element\n        const video = document.createElement('video');\n        video.crossOrigin = \"anonymous\";\n        video.src = videoURL;\n        video.load();\n        video.muted = true;\n        video.loop = true;\n        video.play().catch(e => console.error(\"Autoplay was prevented:\", e)); // Handle autoplay issues gracefully\n\n        // Create a video texture from the video element\n        const texture = new THREE.VideoTexture(video);\n        texture.minFilter = THREE.LinearFilter;\n        texture.magFilter = THREE.LinearFilter;\n        texture.format = THREE.RGBFormat;\n\n        // Use the video texture for the material\n        this.material = new THREE.MeshBasicMaterial({\n            map: texture,\n            side: THREE.DoubleSide,\n        });\n\n        // Use the rounded square geometry for the mesh\n        this.mesh = new THREE.Mesh(roundedSquareGeometry, this.material);\n\n        // Set initial position and rotation\n        this.updatePosition(this.fixedPositionVector, this.fixedFacingVector);\n        this.mesh.rotation.y = Math.PI * 0.5 * Math.abs(this.facingVector.x);\n        this.mesh.rotation.x = Math.PI * 0.5 * Math.abs(this.facingVector.y);\n    }\n    \n    /**\n     * Update the position of the sticker based on the new position and facing direction.\n     * @param {*} positionVector new position\n     * @param {*} facingVector new facing direction\n     */\n    updatePosition(positionVector, facingVector) {\n        // this.mesh.position is the actual position of the face\n        // it is defined as the positionVector translated by the facingVector\n        this.mesh.position.x = positionVector.x + 0.5 * facingVector.x;\n        this.mesh.position.y = positionVector.y + 0.5 * facingVector.y;\n        this.mesh.position.z = positionVector.z + 0.5 * facingVector.z;\n        // translate slightly further so the sticker appears above the cubie's surface\n        this.mesh.position.x += this.mesh.position.x > 0 ? 0.001 : -0.001;\n        this.mesh.position.y += this.mesh.position.y > 0 ? 0.001 : -0.001;\n        this.mesh.position.z += this.mesh.position.z > 0 ? 0.001 : -0.001;\n\n        const axes = Object.values(Axes.POSITIVE);\n        axes.forEach((axis) => {\n            // find the axis the sticker is currently facing\n            if (\n                positionVector[axis] === facingVector[axis] &&\n                Math.abs(positionVector[axis]) === 1\n            ) {\n                // for the other two axes\n                for (const rest of axes.filter((elt) => elt !== axis)) {\n                    // translate slightly inward on that axis (if non-zero)\n                    // this centers the sticker on the cubie\n                    if (positionVector[rest] === 1) {\n                        this.mesh.position[rest] -= 0.025;\n                    } else if (positionVector[rest] === -1) {\n                        this.mesh.position[rest] += 0.025;\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * \"Lock\" position in place. To be called when a turn is complete.\n     *\n     * Assumes the fixed vectors are correct and updates the mesh's position\n     * and all other vectors to reflect that\n     */\n    lockPosition() {\n        // update position vectors\n        const x = Math.round(this.fixedPositionVector.x);\n        const y = Math.round(this.fixedPositionVector.y);\n        const z = Math.round(this.fixedPositionVector.z);\n        this.positionVector = new THREE.Vector3(x, y, z);\n        this.fixedPositionVector = new THREE.Vector3(x, y, z);\n\n        // update facing vectors\n        this.facingVector = new THREE.Vector3(\n            Math.round(this.fixedFacingVector.x),\n            Math.round(this.fixedFacingVector.y),\n            Math.round(this.fixedFacingVector.z)\n        );\n        this.fixedFacingVector = new THREE.Vector3(\n            this.facingVector.x,\n            this.facingVector.y,\n            this.facingVector.z\n        );\n\n        // set mesh's rotation\n        this.mesh.rotation.y = Math.PI * 0.5 * Math.abs(this.facingVector.x);\n        this.mesh.rotation.x = Math.PI * 0.5 * Math.abs(this.facingVector.y);\n        this.mesh.rotation.z = 0;\n    }\n    // perform instantaneous 90 degree turn\n    turn(axis, dir) {\n        var rotationMatrix = getRotationMatrix(axis, dir * Math.PI * 0.5);\n        this.fixedFacingVector.applyMatrix3(rotationMatrix);\n        this.fixedPositionVector.applyMatrix3(rotationMatrix);\n        this.lockPosition();\n        this.updatePosition(this.fixedPositionVector, this.fixedFacingVector);\n        this.mesh.rotation.y = Math.PI * 0.5 * Math.abs(this.facingVector.x);\n        this.mesh.rotation.x = Math.PI * 0.5 * Math.abs(this.facingVector.y);\n    }\n    // perform a rotation of theta radians\n    rotate(axis, theta) {\n        var rotationMatrix = getRotationMatrix(axis, theta);\n        this.facingVector.applyMatrix3(rotationMatrix);\n        this.positionVector.applyMatrix3(rotationMatrix);\n        this.updatePosition(this.positionVector, this.facingVector);\n        this.mesh.rotateOnWorldAxis(AxisVectors[axis], theta);\n    }\n}\n\nexport default Sticker;\n","import * as THREE from 'three';\n\nimport getRotationMatrix from \"./RotationMatrices.js\";\nimport Sticker from \"./Sticker.js\";\n\n/**\n * Rounded Box code taken from forum: https://discourse.threejs.org/t/round-edged-box/1402\n */\nconst width = 1; // width of box\nconst height = 1; // height of box\nconst depth = 1; // depth of box\nconst radius0 = 0.05; // radius of curve\nconst smoothness = 16; // smoothness of curve\n\n// create a rounded box shape\nconst shape = new THREE.Shape();\nconst eps = 0.00001;\nconst radius = radius0 - eps;\nshape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\nshape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\nshape.absarc(\n    width - radius * 2,\n    height - radius * 2,\n    eps,\n    Math.PI / 2,\n    0,\n    true\n);\nshape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n\n// create the geometry based on the shape\nconst roundedBoxGeometry = new THREE.ExtrudeBufferGeometry(shape, {\n    depth: depth - radius0 * 2,\n    bevelEnabled: true,\n    bevelSegments: smoothness * 2,\n    steps: 1,\n    bevelSize: radius,\n    bevelThickness: radius0,\n    curveSegments: smoothness,\n});\nroundedBoxGeometry.center();\n\n// basic black material for the cubie\nconst materialBlack = new THREE.MeshBasicMaterial({ color: 0x000000 });\n\n/**\n * Class for each cubie on the cube\n */\nclass Cubie {\n    constructor(x, y, z, cubieVideoURLs) { // Now accepts cubieVideoURLs\n        this.angle = 0;\n        this.animating = false;\n        this.animateAxis = null;\n        this.animateDir = 0;\n\n        this.positionVector = new THREE.Vector3(x, y, z);\n        this.fixedPositionVector = new THREE.Vector3(x, y, z);\n\n        this.mesh = new THREE.Mesh(roundedBoxGeometry, materialBlack);\n        this.stickers = [];\n\n        let videoIndex = 0; // To iterate over cubieVideoURLs\n\n        if (x === -1) {\n            this.stickers.push(new Sticker(x, y, z, new THREE.Vector3(-1, 0, 0), cubieVideoURLs[videoIndex++]));\n        } else if (x === 1) {\n            this.stickers.push(new Sticker(x, y, z, new THREE.Vector3(1, 0, 0), cubieVideoURLs[videoIndex++]));\n        }\n        if (y === -1) {\n            this.stickers.push(new Sticker(x, y, z, new THREE.Vector3(0, -1, 0), cubieVideoURLs[videoIndex++]));\n        } else if (y === 1) {\n            this.stickers.push(new Sticker(x, y, z, new THREE.Vector3(0, 1, 0), cubieVideoURLs[videoIndex++]));\n        }\n        if (z === -1) {\n            this.stickers.push(new Sticker(x, y, z, new THREE.Vector3(0, 0, -1), cubieVideoURLs[videoIndex++]));\n        } else if (z === 1) {\n            this.stickers.push(new Sticker(x, y, z, new THREE.Vector3(0, 0, 1), cubieVideoURLs[videoIndex++]));\n        }\n\n        this.updatePosition(this.fixedPositionVector);\n    }\n\n    /**\n     * Update the mesh's position\n     * @param {*} vector new position\n     */\n    updatePosition(vector) {\n        this.mesh.position.x = vector.x;\n        this.mesh.position.y = vector.y;\n        this.mesh.position.z = vector.z;\n    }\n\n    /**\n     * \"Lock\" position in place. To be called when a turn is complete.\n     *\n     * Assumes fixed position vector is the correct position and updates the\n     * mesh's actual position to reflect that\n     */\n    lockPosition() {\n        const x = Math.round(this.fixedPositionVector.x);\n        const y = Math.round(this.fixedPositionVector.y);\n        const z = Math.round(this.fixedPositionVector.z);\n        this.positionVector = new THREE.Vector3(x, y, z);\n        this.fixedPositionVector = new THREE.Vector3(x, y, z);\n\n        this.mesh.position.x = x;\n        this.mesh.position.y = y;\n        this.mesh.position.z = z;\n        this.stickers.forEach((sticker) => {\n            sticker.lockPosition();\n        });\n    }\n\n    /**\n     * Perform an instantaneous 90 degree turn about the given axis in the specified direction.\n     * @param {*} axis axis about which to perform the turn\n     * @param {*} dir direction in which to perform the turn\n     */\n    turn(axis, dir) {\n        var rotationMatrix = getRotationMatrix(axis, dir * Math.PI * 0.5);\n        this.fixedPositionVector.applyMatrix3(rotationMatrix);\n        this.lockPosition();\n        this.updatePosition(this.fixedPositionVector); // TODO: remove this?\n        this.mesh.rotation.x = 0;\n        this.mesh.rotation.y = 0;\n        this.mesh.rotation.z = 0;\n        this.stickers.forEach((sticker) => {\n            sticker.turn(axis, dir);\n        });\n    }\n\n    /**\n     * Rotate the cubie the specified number of radians about the given axis\n     * @param {*} axis axis about which to perform the rotation\n     * @param {*} theta radians to rotate by\n     */\n    rotate(axis, theta) {\n        // get the rotation matrix corresponding to the requested rotation\n        const rotationMatrix = getRotationMatrix(axis, theta);\n        // apply rotation to the position vector\n        this.positionVector.applyMatrix3(rotationMatrix);\n        // update cubie's position\n        this.updatePosition(this.positionVector);\n        // increment mesh's rotation\n        this.mesh.rotation[axis] += theta;\n\n        // rotate each sticker as well\n        this.stickers.forEach((sticker) => {\n            sticker.rotate(axis, theta);\n        });\n    }\n}\n\nexport default Cubie;\n","import Cubie from \"./Cubie.js\";\nimport { Axes } from \"./Constants.js\";\n\n/**\n * Class to store the meshes for the cubies and stickers comprising a Rubik's Cube.\n */\nclass Cube {\n    /**\n     * Construct a new cube.\n     * @param {*} scene threejs scene the cube is a part of\n     */\n    constructor(scene, videoURLs) {\n        // array to store every Cubie object\n        this.cubies = [];\n        // array to store all the meshes comprising the cube\n        this.meshes = [];\n        // map from sticker's mesh uuid to the mesh itself\n        this.stickersMap = new Map();\n\n        this.videoURLs = videoURLs; // Store video URLs\n\n        // Assuming videoURLs is an array of at least 54 video URLs.\n        let videoIndex = 0; // To keep track of the current video URL index\n\n        // initialize 26 cubies (ignoring the very center)\n        for (let x = -1; x <= 1; x++) {\n            for (let y = -1; y <= 1; y++) {\n                for (let z = -1; z <= 1; z++) {\n                    if (x !== 0 || y !== 0 || z !== 0) {\n                        // Pass an array of video URLs for each Cubie's stickers\n                        // This assumes each Cubie knows how to assign these URLs to its stickers\n                        const cubieVideoURLs = this.videoURLs.slice(videoIndex, videoIndex + 3);\n                        this.cubies.push(new Cubie(x, y, z, cubieVideoURLs));\n                        videoIndex += 3; // Advance the index by 3 for the next Cubie\n                    }\n                }\n            }\n        }\n        // for each cubie\n        this.cubies.forEach((cubie) => {\n            // add it to the scene\n            scene.add(cubie.mesh);\n            // add cubie's mesh to mesh array\n            this.meshes.push(cubie.mesh);\n            // for each sticker on the cubie\n            cubie.stickers.forEach((sticker) => {\n                // add sticker to scene, mesh array, and stickers map\n                scene.add(sticker.mesh);\n                this.meshes.push(sticker.mesh);\n                this.stickersMap.set(sticker.mesh.uuid, sticker);\n            });\n        });\n    }\n\n    /**\n     * Perform a given function on every cubie in the cube.\n     * @param {*} fn function to perform on each cubie\n     */\n    forEach(fn) {\n        this.cubies.forEach((cubie) => {\n            fn(cubie);\n        });\n    }\n\n    /**\n     * Generate and return a unique string representation of the cube state.\n     * @returns string representation of the cube state\n     */\n    repr() {\n        // first figure out what stickers are where by examining the cubies array\n\n        // stickers[face][x][y] = sticker at x, y on that face,\n        // where faces are ordered up, down, front, back, right, left\n        const stickers = [\n            [\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n            ],\n            [\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n            ],\n            [\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n            ],\n            [\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n            ],\n            [\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n            ],\n            [\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n                [\"B\", \"B\", \"B\"],\n            ],\n        ];\n        // for each cubie, store its face color\n        this.cubies.forEach((cubie) => {\n            // up face\n            if (cubie.positionVector.y === 1) {\n                cubie.stickers.forEach((sticker) => {\n                    if (sticker.facingVector.y === 1)\n                        stickers[0][sticker.fixedPositionVector.z + 1][\n                            sticker.fixedPositionVector.x + 1\n                        ] = sticker.getColor();\n                });\n            }\n            // down face\n            if (cubie.positionVector.y === -1) {\n                cubie.stickers.forEach((sticker) => {\n                    if (sticker.facingVector.y === -1) {\n                        stickers[1][-1 * sticker.fixedPositionVector.z + 1][\n                            sticker.fixedPositionVector.x + 1\n                        ] = sticker.getColor();\n                    }\n                });\n            }\n            // front face\n            if (cubie.positionVector.z === 1) {\n                cubie.stickers.forEach((sticker) => {\n                    if (sticker.facingVector.z === 1)\n                        stickers[2][-1 * sticker.fixedPositionVector.y + 1][\n                            sticker.fixedPositionVector.x + 1\n                        ] = sticker.getColor();\n                });\n            }\n            // back face\n            if (cubie.positionVector.z === -1) {\n                cubie.stickers.forEach((sticker) => {\n                    if (sticker.facingVector.z === -1)\n                        stickers[3][-1 * sticker.fixedPositionVector.y + 1][\n                            -1 * sticker.fixedPositionVector.x + 1\n                        ] = sticker.getColor();\n                });\n            }\n            // right face\n            if (cubie.positionVector.x === 1) {\n                cubie.stickers.forEach((sticker) => {\n                    if (sticker.facingVector.x === 1)\n                        stickers[4][-1 * sticker.fixedPositionVector.y + 1][\n                            -1 * sticker.fixedPositionVector.z + 1\n                        ] = sticker.getColor();\n                });\n            }\n            // left face\n            if (cubie.positionVector.x === -1) {\n                cubie.stickers.forEach((sticker) => {\n                    if (sticker.facingVector.x === -1)\n                        stickers[5][-1 * sticker.fixedPositionVector.y + 1][\n                            sticker.fixedPositionVector.z + 1\n                        ] = sticker.getColor();\n                });\n            }\n        });\n\n        // construct the repr from the extracted stickers data\n        let cubeRepr = \"\";\n        stickers.forEach((sticker) => {\n            sticker.forEach((line) => {\n                cubeRepr += line.join(\"\");\n            });\n        });\n\n        return cubeRepr;\n    }\n\n    /**\n     * Initiate the animation for the requested move.\n     *\n     * The move string should correspond to standard cube notation.\n     *\n     * @param {string} moveStr Move to perform\n     */\n    move(moveStr) {\n        switch (moveStr) {\n            case \"U\":\n                this.moveLayer(Axes.POSITIVE.Y, 1, 1);\n                return;\n            case \"U'\":\n                this.moveLayer(Axes.POSITIVE.Y, 1, -1);\n                return;\n            case \"u\":\n                this.moveLayer(Axes.POSITIVE.Y, 1, 1);\n                this.moveLayer(Axes.POSITIVE.Y, 0, -1);\n                return;\n            case \"u'\":\n                this.moveLayer(Axes.POSITIVE.Y, 1, -1);\n                this.moveLayer(Axes.POSITIVE.Y, 0, 1);\n                return;\n            case \"D\":\n                this.moveLayer(Axes.POSITIVE.Y, -1, 1);\n                return;\n            case \"D'\":\n                this.moveLayer(Axes.POSITIVE.Y, -1, -1);\n                return;\n            case \"d\":\n                this.moveLayer(Axes.POSITIVE.Y, -1, 1);\n                this.moveLayer(Axes.POSITIVE.Y, 0, 1);\n                return;\n            case \"d'\":\n                this.moveLayer(Axes.POSITIVE.Y, -1, -1);\n                this.moveLayer(Axes.POSITIVE.Y, 0, -1);\n                return;\n            case \"F\":\n                this.moveLayer(Axes.POSITIVE.Z, 1, 1);\n                return;\n            case \"F'\":\n                this.moveLayer(Axes.POSITIVE.Z, 1, -1);\n                return;\n            case \"f\":\n                this.moveLayer(Axes.POSITIVE.Z, 1, 1);\n                this.moveLayer(Axes.POSITIVE.Z, 0, 1);\n                return;\n            case \"f'\":\n                this.moveLayer(Axes.POSITIVE.Z, 1, -1);\n                this.moveLayer(Axes.POSITIVE.Z, 0, -1);\n                return;\n            case \"B\":\n                this.moveLayer(Axes.POSITIVE.Z, -1, 1);\n                return;\n            case \"B'\":\n                this.moveLayer(Axes.POSITIVE.Z, -1, -1);\n                return;\n            case \"b\":\n                this.moveLayer(Axes.POSITIVE.Z, -1, 1);\n                this.moveLayer(Axes.POSITIVE.Z, 0, -1);\n                return;\n            case \"b'\":\n                this.moveLayer(Axes.POSITIVE.Z, -1, -1);\n                this.moveLayer(Axes.POSITIVE.Z, 0, 1);\n                return;\n            case \"R\":\n                this.moveLayer(Axes.POSITIVE.X, 1, 1);\n                return;\n            case \"R'\":\n                this.moveLayer(Axes.POSITIVE.X, 1, -1);\n                return;\n            case \"r\":\n                this.moveLayer(Axes.POSITIVE.X, 1, 1);\n                this.moveLayer(Axes.POSITIVE.X, 0, -1);\n                return;\n            case \"r'\":\n                this.moveLayer(Axes.POSITIVE.X, 1, -1);\n                this.moveLayer(Axes.POSITIVE.X, 0, 1);\n                return;\n            case \"L\":\n                this.moveLayer(Axes.POSITIVE.X, -1, 1);\n                return;\n            case \"L'\":\n                this.moveLayer(Axes.POSITIVE.X, -1, -1);\n                return;\n            case \"l\":\n                this.moveLayer(Axes.POSITIVE.X, -1, 1);\n                this.moveLayer(Axes.POSITIVE.X, 0, 1);\n                return;\n            case \"l'\":\n                this.moveLayer(Axes.POSITIVE.X, -1, -1);\n                this.moveLayer(Axes.POSITIVE.X, 0, -1);\n                return;\n            case \"M\":\n                this.moveLayer(Axes.POSITIVE.X, 0, 1);\n                return;\n            case \"M'\":\n                this.moveLayer(Axes.POSITIVE.X, 0, -1);\n                return;\n            case \"E\":\n                this.moveLayer(Axes.POSITIVE.Y, 0, 1);\n                return;\n            case \"E'\":\n                this.moveLayer(Axes.POSITIVE.Y, 0, -1);\n                return;\n            case \"S\":\n                this.moveLayer(Axes.POSITIVE.Z, 0, 1);\n                return;\n            case \"S'\":\n                this.moveLayer(Axes.POSITIVE.Z, 0, -1);\n                return;\n            case \"x\":\n            case \"X\":\n                this.moveLayer(Axes.POSITIVE.X, -1, -1);\n                this.moveLayer(Axes.POSITIVE.X, 0, -1);\n                this.moveLayer(Axes.POSITIVE.X, 1, 1);\n                return;\n            case \"x'\":\n            case \"X'\":\n                this.moveLayer(Axes.POSITIVE.X, -1, 1);\n                this.moveLayer(Axes.POSITIVE.X, 0, 1);\n                this.moveLayer(Axes.POSITIVE.X, 1, -1);\n                return;\n            case \"y\":\n            case \"Y\":\n                this.moveLayer(Axes.POSITIVE.Y, -1, -1);\n                this.moveLayer(Axes.POSITIVE.Y, 0, -1);\n                this.moveLayer(Axes.POSITIVE.Y, 1, 1);\n                return;\n            case \"y'\":\n            case \"Y'\":\n                this.moveLayer(Axes.POSITIVE.Y, -1, 1);\n                this.moveLayer(Axes.POSITIVE.Y, 0, 1);\n                this.moveLayer(Axes.POSITIVE.Y, 1, -1);\n                return;\n            case \"z\":\n            case \"Z\":\n                this.moveLayer(Axes.POSITIVE.Z, -1, -1);\n                this.moveLayer(Axes.POSITIVE.Z, 0, 1);\n                this.moveLayer(Axes.POSITIVE.Z, 1, 1);\n                return;\n            case \"z'\":\n            case \"Z'\":\n                this.moveLayer(Axes.POSITIVE.Z, -1, 1);\n                this.moveLayer(Axes.POSITIVE.Z, 0, -1);\n                this.moveLayer(Axes.POSITIVE.Z, 1, -1);\n                return;\n            default:\n                console.warn(`Unhandled move: ${moveStr}`);\n                // Handle the unexpected moveStr, e.g., by ignoring it or logging a warning.\n                break;\n        }\n    }\n\n    /**\n     * Initiate the animation for the given layer of the cube.\n     *\n     * dir = -1 indicates a counter clockwise turn, and\n     * dir = 1 indicates a clockwise turn.\n     *\n     * @param {*} axis axis used to identify pieces to turn\n     * @param {*} axisValue sign (-1, 0, or 1) of the axis to identify pieces to turn\n     * @param {*} dir direction (-1 or 1) to turn pieces\n     * @returns a function that triggers the requested outer layer turn\n     */\n    moveLayer(axis, axisValue, dir) {\n        // have axisValue change animDir only if non-zero\n        let animDir = dir;\n        // performing an outer layer turn\n        if (axisValue !== 0) animDir *= -1 * axisValue;\n        // performing a slice move, so the dir is a bit trickier to determine\n        else if (axis === Axes.POSITIVE.Z) {\n            // S slice gets the opposite sign\n            animDir *= -1;\n        }\n\n        // turn all pieces who are positioned in the correct layer\n        this.cubies.forEach((cubie) => {\n            if (cubie.positionVector[axis] === axisValue) {\n                cubie.animating = true;\n                cubie.angle = 0;\n                cubie.animateAxis = axis;\n                cubie.animateDir = animDir;\n            }\n        });\n    }\n}\n\nexport default Cube;\n","import * as THREE from 'three';\nimport { OrbitControls } from \"../three/OrbitControls.js\";\nimport Cube from \"./Cube.js\";\nimport {\n    Axes,\n    KeysToMoves,\n    ClickFlags,\n    MoveFlags,\n    ANIMATION_SPEED,\n} from \"./Constants.js\";\n\n// CubeMasterInit function encapsulates the cube setup to be called with videoURLs\nexport function CubeMasterInit(videoURLs) {\n\n    let holdingW = false;\n    const mouse = new THREE.Vector2();\n    const delta = new THREE.Vector2();\n    const raycaster = new THREE.Raycaster();\n\n    const getHeaderSize = () => {\n        // Height of header for embedding in other websites\n        return 0;\n    };\n\n    const getHeight = () => {\n        // Main content height calculation\n        return window.innerHeight * 0.95;\n    };\n\n    const getTolerance = () => {\n        // Tolerance for mouse/pointer moves, higher on mobile\n        if (window.innerWidth <= 500) {\n            return 0.1;\n        }\n        return 0.05;\n    };\n\n    let moveBuffer = []; // FIFO buffer for storing moves\n    let animating = false; // Animation state flag\n    let solving = false; // Cube solving state flag\n\n    const domElement = document.getElementById(\"three\"); // Targeting the DOM element for rendering\n\n    const scene = new THREE.Scene(); // Creating a new THREE.js scene\n    scene.background = new THREE.Color(0xf5f5f5); // Setting the scene background color\n\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / getHeight(), 0.1, 1000);\n    camera.position.set(4, 4, 6); // Setting camera position\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true }); // Creating the renderer with antialiasing\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(window.innerWidth, getHeight());\n    domElement.appendChild(renderer.domElement); // Adding the renderer to the DOM\n\n    const controls = new OrbitControls(camera, renderer.domElement); // Configuring orbit controls\n    controls.minDistance = 5;\n    controls.maxDistance = 15;\n    controls.enablePan = false;\n    controls.enableRotate = false;\n    controls.update();\n\n    const cube = new Cube(scene, videoURLs); // Create the cube and pass videoURLs\n\n    let rotationPixelCutoff; // Variable to store cutoff pixel location for changing cube rotations\n\n    // Function to update the rotation pixel cutoff\n    const updateRotationPixelCutoff = () => {\n        const halfWidth = window.innerWidth / 2;\n        cube.cubies.forEach((cubie) => {\n            if (cubie.fixedPositionVector.x === 1 && cubie.fixedPositionVector.y === -1 && cubie.fixedPositionVector.z === 1) {\n                const pos = cubie.fixedPositionVector.clone();\n                pos.project(camera);\n                rotationPixelCutoff = pos.x * halfWidth + halfWidth;\n            }\n        });\n    };\n    updateRotationPixelCutoff();\n    controls.addEventListener(\"change\", updateRotationPixelCutoff); // Updating rotation pixel cutoff on zoom\n\n    const solveCube = () => {\n        // Functionality for solving the cube\n        console.log(\"Cube solving functionality has been disabled.\");\n        solving = false;\n    };\n\n    const clock = new THREE.Clock(); // Clock for tracking time\n\n    // Function for making updates per tick\n    const update = () => {\n        const delta = clock.getDelta();\n\n        if (!animating && moveBuffer.length > 0) {\n            const move = moveBuffer.shift();\n\n            if (move === MoveFlags.SOLUTION_END) {\n                solving = false;\n                animating = false;\n            } else if (move === MoveFlags.SOLUTION_START) {\n                solveCube();\n            } else {\n                cube.move(move);\n                animating = true;\n            }\n        }\n\n        // if any cubie is animating, perform the animation\n        cube.forEach((cubie) => {\n            if (cubie.animating) {\n                if (cubie.angle >= Math.PI * 0.5) {\n                    // if it's finished rotating 90 degrees\n                    cubie.angle = 0;\n                    cubie.animating = false;\n                    cubie.turn(cubie.animateAxis, cubie.animateDir);\n                    cubie.lockPosition();\n                    animating = false;\n                } else {\n                    // if it's still rotating\n                    cubie.rotate(\n                        cubie.animateAxis,\n                        cubie.animateDir * delta * ANIMATION_SPEED\n                    );\n                    cubie.angle += delta * ANIMATION_SPEED;\n                }\n            }\n        });\n    };\n\n    // Animation function to be called with requestAnimationFrame\n    const animate = () => {\n        requestAnimationFrame(animate);\n        update();\n        renderer.render(scene, camera);\n    };\n    animate(); // Start the animation loop\n\n    // Event handlers for keyboard and mouse events, resize, and touch\n\n    /**\n     * Handle key press event\n     */\n    const onKeyPress = (event) => {\n        // do nothing if solving\n        if (solving) return;\n\n        // append 'w' if holding w\n        const key = holdingW ? \"w\" + event.key : event.key;\n\n        if (KeysToMoves[key] !== undefined) {\n            // push normal move if key is in KeysToMoves map\n            moveBuffer.push(KeysToMoves[key]);\n        } else if (event.key === \"Enter\") {\n            // set solving to true and queue a solve request\n            solving = true;\n            moveBuffer.push(MoveFlags.SOLUTION_START);\n        } else if (event.key === \"w\" || event.key === \"W\") {\n            holdingW = true;\n        }\n    };\n    document.addEventListener(\"keypress\", onKeyPress, false);\n\n    /**\n     * Handle key up event\n     */\n    const onKeyUp = (event) => {\n        // unset holdingW if released w\n        if (event.key === \"w\" || event.key === \"W\") holdingW = false;\n    };\n    document.addEventListener(\"keyup\", onKeyUp, false);\n\n    /**\n     * Resize canvas on window resize\n     */\n    const onWindowResize = () => {\n        camera.aspect = window.innerWidth / getHeight();\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, getHeight());\n        updateRotationPixelCutoff();\n    };\n    window.addEventListener(\"resize\", onWindowResize, false);\n\n    /**\n     * Route touch events to mouse events\n     */\n    const onTouchStart = (event) => {\n        event.offsetX = event.touches[0].clientX;\n        event.offsetY = event.touches[0].clientY - getHeaderSize();\n        onDocumentMouseDown(event);\n    };\n    document.addEventListener(\"touchstart\", onTouchStart, false);\n\n    const onTouchEnd = (event) => {\n        onDocumentMouseUp(event);\n    };\n    document.addEventListener(\"touchend\", onTouchEnd, false);\n\n    const onTouchMove = (event) => {\n        event.offsetX = event.touches[0].clientX;\n        event.offsetY = event.touches[0].clientY - getHeaderSize();\n        onDocumentMouseMove(event);\n    };\n    document.addEventListener(\"touchmove\", onTouchMove, false);\n\n    /**\n     * Mouse events\n     */\n    // variables to store the chosen move based on the mouse events\n    let chosenAxis = null;\n    let chosenDir = 0;\n    let selectedObject = ClickFlags.NONE;\n    let dragging = false;\n\n    /**\n     * Handle clicks by finding the mesh that was clicked.\n     */\n    const onDocumentMouseDown = (event) => {\n        // only handle events targeting the canvas\n        if (event.target.tagName.toLowerCase() !== \"canvas\") return;\n\n        // set dragging to true\n        dragging = true;\n\n        // update mouse location\n        mouse.x = (event.offsetX / window.innerWidth) * 2 - 1;\n        mouse.y = -(event.offsetY / getHeight()) * 2 + 1;\n\n        // use raycaster to find what cube meshes intersect mouse position\n        raycaster.setFromCamera(mouse.clone(), camera);\n        const intersects = raycaster.intersectObjects(cube.meshes, true);\n\n        // if nothing was clicked, signal a cube rotation\n        if (intersects.length === 0) {\n            selectedObject = ClickFlags.ROTATION;\n            return;\n        }\n\n        // update selectedObject if the topmost mesh is in the cube's stickersMap\n        if (cube.stickersMap.has(intersects[0].object.uuid)) {\n            selectedObject = intersects[0];\n        } else {\n            // this case happens when the black cubie in between the stickers is clicked\n            // set selectedObject to special CUBIE flag\n            selectedObject = ClickFlags.CUBIE;\n        }\n    };\n    document.addEventListener(\"pointerdown\", onDocumentMouseDown, false);\n\n    /**\n     * Handle mouse release by unsetting chosen axis, direction, and selected object.\n     */\n    const onDocumentMouseUp = (event) => {\n        dragging = false;\n        selectedObject = ClickFlags.NONE;\n        chosenAxis = null;\n        chosenDir = 0;\n    };\n    document.addEventListener(\"pointerup\", onDocumentMouseUp, false);\n\n    /**\n     * Handle mouse move events by determining what\n     * move is being requested, and pushing it to the moveBuffer.\n     */\n    const onDocumentMouseMove = (event) => {\n        // do nothing if not dragging, or if solving\n        if (!dragging || chosenAxis !== null || solving) return;\n\n        // do nothing if clicked a cubie\n        if (selectedObject === ClickFlags.CUBIE) return;\n\n        // find the difference of the current mouse position from where the click began\n        delta.x = (event.offsetX / window.innerWidth) * 2 - 1 - mouse.x;\n        delta.y = -(event.offsetY / getHeight()) * 2 + 1 - mouse.y;\n\n        // do nothing if mouse hasn't moved far enough\n        if (delta.length() <= getTolerance()) return;\n\n        // determine if swipe is up/down or left/right\n        if (Math.abs(delta.x) > Math.abs(delta.y)) {\n            // if change was more in X direction than Y, then moving left/right\n            chosenAxis = Axes.POSITIVE.X;\n            chosenDir = delta.x > 0 ? 1 : -1;\n        } else {\n            // if change was more in Y direction than X, then moving up/down\n            chosenAxis = Axes.POSITIVE.Y;\n            chosenDir = delta.y > 0 ? 1 : -1;\n        }\n\n        // check if this is a cube rotation or a turn\n        if (selectedObject === ClickFlags.ROTATION) {\n            // do a cube rotation\n            if (chosenAxis === Axes.POSITIVE.X) {\n                if (chosenDir === -1) moveBuffer.push(\"y\");\n                else if (chosenDir === 1) moveBuffer.push(\"y'\");\n            } else if (chosenAxis === Axes.POSITIVE.Y) {\n                if (event.offsetX < rotationPixelCutoff) {\n                    // do an x rotation if to the left of the pixel cutoff\n                    if (chosenDir === -1) moveBuffer.push(\"x'\");\n                    else if (chosenDir === 1) moveBuffer.push(\"x\");\n                } else {\n                    // do a z rotation if to the right\n                    if (chosenDir === -1) moveBuffer.push(\"z\");\n                    else if (chosenDir === 1) moveBuffer.push(\"z'\");\n                }\n            }\n            return;\n        }\n\n        // user is performing a move\n\n        // get the mesh for the selected sticker\n        const selectedSticker = cube.stickersMap.get(selectedObject.object.uuid);\n        // check what direction the swipe was in\n        if (chosenAxis === Axes.POSITIVE.X) {\n            // swiping right/left\n            if (selectedSticker.fixedFacingVector.y === 1) {\n                // the selected sticker is facing up\n                switch (selectedSticker.fixedPositionVector.z) {\n                    // piece is in the back layer\n                    case -1:\n                        if (-1 * chosenDir === -1) moveBuffer.push(\"B'\");\n                        else if (-1 * chosenDir === 1) moveBuffer.push(\"B\");\n                        break;\n                    // piece is in the S slice\n                    case 0:\n                        if (chosenDir === -1) moveBuffer.push(\"S'\");\n                        else if (chosenDir === 1) moveBuffer.push(\"S\");\n                        break;\n                    // piece is in the front layer\n                    case 1:\n                        if (chosenDir === -1) moveBuffer.push(\"F'\");\n                        else if (chosenDir === 1) moveBuffer.push(\"F\");\n                        break;\n                    default:\n                        break;\n                }\n            } else {\n                // the selected sticker is facing right or front\n                switch (selectedSticker.fixedPositionVector.y) {\n                    // piece is in bottom layer\n                    case -1:\n                        if (chosenDir === -1) moveBuffer.push(\"D'\");\n                        else if (chosenDir === 1) moveBuffer.push(\"D\");\n                        break;\n                    // piece is in E slice\n                    case 0:\n                        if (chosenDir === -1) moveBuffer.push(\"E'\");\n                        else if (chosenDir === 1) moveBuffer.push(\"E\");\n                        break;\n                    // piece is in up layer\n                    case 1:\n                        if (-1 * chosenDir === -1) moveBuffer.push(\"U'\");\n                        else if (-1 * chosenDir === 1) moveBuffer.push(\"U\");\n                        break;\n                    default:\n                        break;\n                }\n            }\n        } else if (chosenAxis === Axes.POSITIVE.Y) {\n            // swiping up/down\n            if (selectedSticker.fixedFacingVector.x === 1) {\n                // selected sticker is facing right\n                switch (selectedSticker.fixedPositionVector.z) {\n                    // piece is in back layer\n                    case -1:\n                        if (chosenDir === -1) moveBuffer.push(\"B'\");\n                        else if (chosenDir === 1) moveBuffer.push(\"B\");\n                        break;\n                    // piece is in S slice\n                    case 0:\n                        if (-1 * chosenDir === -1) moveBuffer.push(\"S'\");\n                        else if (-1 * chosenDir === 1) moveBuffer.push(\"S\");\n                        break;\n                    // piece is in front layer\n                    case 1:\n                        if (-1 * chosenDir === -1) moveBuffer.push(\"F'\");\n                        else if (-1 * chosenDir === 1) moveBuffer.push(\"F\");\n                        break;\n                    default:\n                        break;\n                }\n            } else {\n                // selected sticker is facing up or front\n                switch (selectedSticker.fixedPositionVector.x) {\n                    // piece is in left layer\n                    case -1:\n                        if (-1 * chosenDir === -1) moveBuffer.push(\"L'\");\n                        else if (-1 * chosenDir === 1) moveBuffer.push(\"L\");\n                        break;\n                    // piece is in M slice\n                    case 0:\n                        if (-1 * chosenDir === -1) moveBuffer.push(\"M'\");\n                        else if (-1 * chosenDir === 1) moveBuffer.push(\"M\");\n                        break;\n                    // piece is in right layer\n                    case 1:\n                        if (chosenDir === -1) moveBuffer.push(\"R'\");\n                        else if (chosenDir === 1) moveBuffer.push(\"R\");\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n        // set dragging to false to not trigger another move\n        dragging = false;\n    };\n    document.addEventListener(\"pointermove\", onDocumentMouseMove, false);\n};","import React, { useState, useEffect, Suspense, useMemo, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport SplashScreen from './SplashScreen';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation, useParams } from 'react-router-dom';\nimport { ModalProvider, useModal } from './ModalContext';\nimport Modal from './Modal';\nimport _ from 'lodash';\nimport { useInView } from 'react-intersection-observer';\nimport { isMobile } from 'react-device-detect';\n\n// to replace later as needed\nimport { CubeMasterInit } from './cube-master/js/cube/main.js';\n\n// Base URL setup for different environments\nconst BASE_URL = process.env.NODE_ENV === 'production'\n  ? 'https://vujade-site-bd6c94750c62.herokuapp.com'\n  : 'http://127.0.0.1:5000';\n\n// Video component for individual videos, optimized with memo for performance\nconst Video = React.memo(({ src, videoID, onVideoClick }) => {\n  const videoRef = useRef(null);\n  const { ref, inView } = useInView({\n    triggerOnce: true,\n    rootMargin: '50px 0px',\n  });\n\n  // Handle play on hover for desktop devices\n  const handleMouseEnter = useCallback(() => {\n    if (!isMobile && videoRef.current) {\n      videoRef.current.play().catch(error => console.error(\"Play was interrupted.\", error));\n    }\n  }, []);\n\n  // Handle pause on mouse leave for desktop devices\n  const handleMouseLeave = useCallback(() => {\n    if (!isMobile && videoRef.current) {\n      videoRef.current.pause();\n    }\n  }, []);\n\n  // Autoplay functionality for mobile devices when the video is in view\n  useEffect(() => {\n    if (isMobile && inView && videoRef.current) {\n      videoRef.current.play().catch(error => console.log(\"Autoplay was prevented.\", error));\n    }\n  }, [inView]);\n\n  return (\n    <div ref={ref} style={{ width: '100%', height: 'auto' }}>\n      {inView && (\n        <video\n          ref={videoRef}\n          src={src}\n          loop\n          muted\n          playsInline\n          onClick={() => {\n            console.log(`Video clicked: ${videoID}`);\n            onVideoClick(videoID);\n          }}\n          onMouseEnter={handleMouseEnter}\n          onMouseLeave={handleMouseLeave}\n          style={{ width: '100%', height: 'auto' }}\n        />\n      )}\n    </div>\n  );\n}, (prevProps, nextProps) => prevProps.videoID === nextProps.videoID && prevProps.src === nextProps.src);\n\n// Function to shuffle an array\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n// MainContent component with video shuffling integrated\nfunction MainContent({ scenes, uniqueVideoIDs }) {\n  const navigate = useNavigate();\n  const { videoID } = useParams();\n  const location = useLocation();\n  const { openModal, currentVideoID } = useModal();\n  const [shuffledScenes, setShuffledScenes] = useState([]);\n\n  useEffect(() => {\n    setShuffledScenes(shuffleArray([...scenes]));\n  }, [scenes]);\n\n  useEffect(() => {\n    if (videoID && scenes.some(scene => scene.videoID === videoID) && currentVideoID !== videoID) {\n      console.log(`Effect to open modal for videoID: ${videoID}`);\n      openModal(videoID);\n    }\n  }, [videoID, scenes, openModal, currentVideoID]);\n\n  const handleVideoNameClick = useCallback((id) => {\n    const onWelcomePage = location.pathname === '/welcome';\n  \n    // Function to navigate and open the modal\n    const navigateAndOpenModal = () => {\n      if (!onWelcomePage || location.pathname !== `/${id}`) {\n        navigate(`/${id}`); // Navigate only if not already on the target path\n      }\n      openModal(id);\n    };\n  \n    if (onWelcomePage) {\n      window.scrollTo({\n        top: document.documentElement.clientHeight,\n        behavior: 'smooth'\n      });\n  \n      setTimeout(() => {\n        navigate('/');\n        console.log(`Preparing to open modal for videoID: ${id}`);\n        navigateAndOpenModal();\n      }, 600);\n    } else {\n      navigateAndOpenModal();\n    }\n  }, [openModal, navigate, location.pathname]);  \n\n  return (\n    <div id=\"videos-section\" className=\"App\">\n      <div className=\"video-menu\">\n        {uniqueVideoIDs.map((video, index) => (\n          <div key={`${video.videoID}-${index}`} onClick={() => handleVideoNameClick(video.videoID)} className=\"video-menu-item\">\n            {video.videoName}\n          </div>\n        ))}\n      </div>\n      <div className=\"video-grid\">\n        {shuffledScenes.map(scene => (\n          <Video\n            key={scene.sceneURL}\n            src={scene.sceneURL}\n            videoID={scene.videoID}\n            onVideoClick={handleVideoNameClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Wrap MainContent with React.memo for performance optimization\nconst MemoizedMainContent = React.memo(MainContent);\n\nfunction Home({ scenes, uniqueVideoIDs }) {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const initialLoad = useRef(true);\n  const [showSplash, setShowSplash] = useState(location.pathname === '/welcome');\n\n  // This ref is used to store the scroll position before the URL change\n  const scrollPositionBeforeNavigation = useRef(0);\n\n  const handleScroll = useCallback(() => {\n    const scrollThreshold = window.innerHeight * 1.0;\n    const hasScrolledPastSplash = window.scrollY > scrollThreshold;\n\n    if (location.pathname === '/welcome' && hasScrolledPastSplash && showSplash) {\n      // Store the current scroll position before changing the URL\n      scrollPositionBeforeNavigation.current = window.scrollY;\n\n      navigate('/', { replace: true });\n      setShowSplash(false); // Update state to hide splash screen\n    }\n  }, [navigate, location.pathname, showSplash]);\n\n  useEffect(() => {\n    // Add scroll event listener on mount\n    window.addEventListener('scroll', handleScroll);\n\n    // Cleanup on unmount\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n\n  useEffect(() => {\n    if (!showSplash) {\n      // Restore the scroll position after the splash screen is hidden\n      console.log(`Scroll position before navigation: ${scrollPositionBeforeNavigation.current}`);\n      window.scrollTo(0, scrollPositionBeforeNavigation.current);\n      console.log('Scroll position after splash screen hidden, restored to previous state');\n    }\n  }, [showSplash]);\n\n  useEffect(() => {\n    if (initialLoad.current) {\n      initialLoad.current = false; // Mark initial load as done\n    } else {\n      // Adjust logic based on navigation that does not involve the initial load\n      setShowSplash(location.pathname === '/welcome');\n    }\n  }, [location.pathname]);\n\n  const splashScreenStyle = showSplash ? {} : { display: 'none' }; // Hide splash screen completely when not visible\n\n  return (\n    <>\n      <div style={splashScreenStyle}>\n        <SplashScreen />\n      </div>\n      <MemoizedMainContent scenes={scenes} uniqueVideoIDs={uniqueVideoIDs} />\n    </>\n  );\n}\n\nfunction CubeWithVideos() {\n  const [cubeVideos, setCubeVideos] = useState([]); // Correctly define state here\n\n  useEffect(() => {\n    const fetchCubeVideos = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/api/scenes`);\n        // Map the fetched scenes to a suitable format for CubeMasterInit, if necessary\n        const shuffledScenes = shuffleArray(response.data.map(scene => scene.sceneURL));\n        setCubeVideos(shuffledScenes); // Now we're correctly using setCubeVideos\n      } catch (error) {\n        console.error('Error fetching cube videos: ', error);\n      }\n    };\n    fetchCubeVideos();\n  }, []);\n\n  useEffect(() => {\n    if (cubeVideos.length > 0) {\n      CubeMasterInit(cubeVideos); // Directly passes the array of URLs\n    }\n  }, [cubeVideos]);\n\n  return <div id=\"cube-container\"></div>;\n}\n\nfunction AppWrapper() {\n  // State for scenes and unique video IDs\n  const [scenes, setScenes] = useState([]);\n  const [uniqueVideoIDs, setUniqueVideoIDs] = useState([]);\n\n  useEffect(() => {\n    // Fetch content from the API\n    const fetchContent = async () => {\n      try {\n        const scenesResponse = await axios.get(`${BASE_URL}/api/scenes`);\n        setScenes(scenesResponse.data);\n        const videosResponse = await axios.get(`${BASE_URL}/api/videos`);\n        setUniqueVideoIDs(_.uniqBy(videosResponse.data, 'videoID'));\n        console.log('Fetched scenes:', scenesResponse.data);\n        console.log('Fetched videos:', videosResponse.data);\n      } catch (error) {\n        console.error('Error fetching content: ', error);\n      }\n    };\n    fetchContent();\n  }, []);\n\n  // Use useMemo to memoize scenes and uniqueVideoIDs so they don't cause unnecessary re-renders\n  const memoizedScenes = useMemo(() => scenes, [scenes]);\n  const memoizedUniqueVideoIDs = useMemo(() => uniqueVideoIDs, [uniqueVideoIDs]);\n\n  return (\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}>\n        <ModalProvider>\n          <Routes>\n            <Route path=\"/welcome\" element={<Home scenes={memoizedScenes} uniqueVideoIDs={memoizedUniqueVideoIDs} />} />\n            <Route path=\"/cube-master\" element={<CubeWithVideos />} />\n            <Route path=\"/\" element={<Home scenes={memoizedScenes} uniqueVideoIDs={memoizedUniqueVideoIDs} />} />\n            <Route path=\"/:videoID\" element={\n              <>\n                <Home scenes={memoizedScenes} uniqueVideoIDs={memoizedUniqueVideoIDs} />\n                <Modal />\n              </>\n            } />\n          </Routes>\n        </ModalProvider>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default AppWrapper;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { ModalProvider } from './ModalContext';\nimport reportWebVitals from './reportWebVitals';\n\n// Use the createRoot API\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <ModalProvider>\n      <App />\n    </ModalProvider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}